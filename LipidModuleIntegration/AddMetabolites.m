function [ModelTemplate3] = AddMetabolites(IntegLmMets,ModelTemplate2)
%% ========================================================================
% 'AddMetabolites' function add the compartment information of the non
% paired-up compartments to the Template model and also adds the essential
% metabolites of the Lipid module necessary to make the ModelTemplate
% functional.
%
% USAGE:
%   [ModelTemplate3] = AddMetabolites(IntegLmMets,ModelTemplate2)
%
% INPUTS:   
%   HarmEssentialMetsInteg: Definite list of the harmonized metabolites 
%                           that will be added to the ModelTemplate. 
%
%   HarmLmMetsInteg:        List with harmonized metabolite IDs that results
%                           from matching the information of the metabolites
%                           of the LipidModule and ModelTemplate.
%           
%	ModelTemplate2:         COBRA model strcuture of ModelTemplate with 
%                           harmonized 'metNames' field. 
%
% OUTPUTS:
%	ModelTemplate3:         COBRA model structure that contains the merged
%                           list of metabolites from the Lipid module and 
%                           the ModelTemplate.        
% =========================================================================                       
%% 
pathUnpairedComps = fullfile('OutputFiles','Unpaired_Compartments.mat');
Temp1 = load(pathUnpairedComps); %Generated by the matlab app
UnpairedCompartments = Temp1.unpaired_Compartments;
UnpairedCompartments.Properties.VariableNames = {'Abbreviation','Compartment_Name'};
pathUnpairedComps2 = fullfile('OutputFiles','Unpaired_Compartments.txt');
writetable(UnpairedCompartments,pathUnpairedComps2);
UnpairedCompartments = table2cell(UnpairedCompartments);
UnpairedCompartments = UnpairedCompartments(~cellfun(@isempty, UnpairedCompartments(:,1)),:);
delete(pathUnpairedComps)
clearvars Temp1 pathUnpairedComps2

if ~isempty(UnpairedCompartments)
    for UnPairedCompIdx = 1:size(UnpairedCompartments,1)
        CompID = UnpairedCompartments(UnPairedCompIdx,1);
        ModelTemplate2.comps = [ModelTemplate2.comps;CompID];
        CompName = UnpairedCompartments(UnPairedCompIdx,2);
        ModelTemplate2.compNames = [ModelTemplate2.compNames;CompName];
    end  
end

%% Extract variables from structure fields:
HarmEssentialMetsInteg  = IntegLmMets.HarmEssMetsInteg;
HarmLmMetsInteg         = IntegLmMets.HarmLmMetsInteg;

%%
% Add metabolites to the Template model:
UniqueIdx = ismember(HarmEssentialMetsInteg(:,1),HarmLmMetsInteg);
EssentialUnique = HarmEssentialMetsInteg(UniqueIdx,:);
[~,ci,~] = unique(EssentialUnique(:,1));
MetsID = cellstr(EssentialUnique(ci,1)');
MetNames = cellstr(EssentialUnique(ci,2)');
Formulas = cellstr(EssentialUnique(ci,3)');
KEGGid = cellstr(EssentialUnique(ci,7)');
Charges = str2double(EssentialUnique(ci,4)');

ModelTemplate2 = addMultipleMetabolites(ModelTemplate2, MetsID, 'metNames', MetNames, 'metCharges', Charges, 'metFormulas', Formulas, 'metKEGGID', KEGGid);

%Add ChebiIDs information to metabolites
ChebiIDs = [MetsID',EssentialUnique(ci,9)];
ChebiIdx = cellfun(@isempty,ChebiIDs(:,2));%Idx of empty cells
ChebiIDs(ChebiIdx==1,:) = [];
if ~isfield(ModelTemplate2,'metChEBIID') %Create field if doesn't exist
    ModelTemplate2 = addMIRIAMAnnotations(ModelTemplate2, cellstr(ChebiIDs(:,1)'), 'chebi', cellstr(ChebiIDs(:,2)'));
else
    for ChebiIdx2 = 1:length(ChebiIDs)
        ChebimetID = string(ChebiIDs(ChebiIdx2,1));
        [ChebimetIDx,~] = CompareArrays(ModelTemplate2.mets, ChebimetID);
        ModelTemplate2.metChEBIID{ChebimetIDx,1} = ChebiIDs{ChebiIdx2,2};
    end
end

%Add PubChem information to metabolites
PubChemIDs = [MetsID',EssentialUnique(ci,8)];
PubChIdx = cellfun(@isempty,PubChemIDs(:,2));
PubChemIDs(PubChIdx==1,:) = [];
if ~isfield(ModelTemplate2,'metPubChemID')
    ModelTemplate2 = addMIRIAMAnnotations(ModelTemplate2, cellstr(PubChemIDs(:,1)'), 'PubChem-compound', cellstr(PubChemIDs(:,2)'));
else
    for PubChIdx2 = 1:length(PubChemIDs)
        PubChmetID = string(PubChemIDs(PubChIdx2,1));
        [PubChmetIDx,~] = CompareArrays(ModelTemplate2.mets, PubChmetID);
        ModelTemplate2.metPubChemID{PubChmetIDx,1} = PubChemIDs{PubChIdx2,2};
    end
end

%Add Lipid Maps information to metabolites
LMs = [MetsID',EssentialUnique(ci,11)];
LMIdx = cellfun(@isempty,LMs(:,2));
LMs(LMIdx==1,:) = [];
if ~isfield(ModelTemplate2,'metislipidmapsID')
    ModelTemplate2 = addMIRIAMAnnotations(ModelTemplate2, cellstr(LMs(:,1)'), 'lipidmaps', cellstr(LMs(:,2)'));
else
    for LMIdx2 = 1:length(LMs)
        LMrxnID = string(LMs(LMIdx2,1));
        [LMrxnIDx,~] = CompareArrays(ModelTemplate2.mets, LMrxnID);
        ModelTemplate2.metislipidmapsID{LMrxnIDx,1} = LMs{LMIdx2,2};
    end
end

%Add InChI information to metabolites
InCh = [MetsID',EssentialUnique(ci,10)];
InChIdx = cellfun(@isempty,InCh(:,2));
InCh(InChIdx==1,:) = [];
if ~isfield(ModelTemplate2,'metInChIString')
    ModelTemplate2 = addMIRIAMAnnotations(ModelTemplate2, cellstr(InCh(:,1)'), 'inchi', cellstr(InCh(:,2)'));
else
    for InChIdx2 = 1:length(InCh)
        InChrxnID = string(InCh(InChIdx2,1));
        [InChrxnIDx,~] = CompareArrays(ModelTemplate2.mets, InChrxnID);
        ModelTemplate2.metInChIString{InChrxnIDx,1} = InCh{InChIdx2,2};
    end
end

ModelTemplate3 = ModelTemplate2;

end